# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ ci-cd-docker ]
    tags:
      - '*'
  pull_request:
    branches: [ ci-cd-docker ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # Resolve repo details and 
      - name: Resolve package details
        id: resolve-package-details
        run: |
        
          # Default tag is based on current timestamp
          REPO_TAG="0.0.$(date +%s)"
          DEPLOYMENT_GROUP="${{ secrets.QBEE_GROUP_ID_DEV }}"
          
          # Use production deployment group and github tagname if this is a tag build
          if [[ ${{ github.ref_type }} == "tag" ]]; then
            REPO_TAG=$(git describe --abbrev=0 --tags)
            # Deploy to prod on tag
            DEPLOYMENT_GROUP="${{ secrets.QBEE_GROUP_ID_PROD }}"
          fi

          REPO_NAME=$(basename ${{ github.repository }})
          
          # store the values for use in subsequent steps
          echo "REPO_NAME=$REPO_NAME" >> $GITHUB_OUTPUT
          echo "REPO_TAG=$REPO_TAG" >> $GITHUB_OUTPUT
          echo "DEPLOYMENT_GROUP=$DEPLOYMENT_GROUP" >> $GITHUB_OUTPUT
          
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: cloud.canister.io:5000
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_TOKEN }}
          
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: ci-cd/docker
          push: true
          file: ci-cd/docker/Dockerfile
          provenance: false
          tags: cloud.canister.io:5000/${{ secrets.REGISTRY_USERNAME }}/qbee-ci-cd-docker:${{ steps.resolve-package-details.outputs.REPO_TAG }}

      - name: qbee.io authentication
        id: qbee-auth
        uses: qbee-io/authenticate-action@main
        with:
          login: ${{ secrets.QBEE_USER }}
          password: ${{ secrets.QBEE_PW }}
          api_host: www.app.qbee-dev.qbee.io
        
      - name: qbee.io config expand
        id: qbee-io-config-expand
        run: |
          export DOCKER_IMAGE="cloud.canister.io:5000/${{ secrets.REGISTRY_USERNAME }}/qbee-ci-cd-docker:${{ steps.resolve-package-details.outputs.REPO_TAG }}"
          export REGISTRY_USERNAME="${{ secrets.REGISTRY_USERNAME }}"
          export REGISTRY_PASSWORD="${{ secrets.REGISTRY_TOKEN }}"
          envsubst < ci-cd/docker/qbee-config.json > ci-cd/docker/qbee-config-expanded.json

      - name: qbee.io config upload and commit
        id: qbee-io-config-upload
        uses: qbee-io/config-apply-action@main
        with:
          token: ${{ steps.qbee-auth.outputs.token }}
          file_path: ci-cd/docker/qbee-config-expanded.json
          node_id: ${{ steps.resolve-package-details.outputs.DEPLOYMENT_GROUP }}
          form_type: docker_containers
          commit_message: Commit of build ${{ steps.resolve-package-details.outputs.REPO_TAG }}
          api_host: www.app.qbee-dev.qbee.io
